15:00:10.582 [main] INFO  resources.WriteExcel - Adding value 3:22to (row, col) : (12, 3)
15:00:10.584 [main] INFO  resources.WriteExcel - Adding value *Information: Although Rahul Shetty is using the SessionFilter object using basic authentication login mechanism in all the subsequent tests, we are using API token based login mechanism on our cloud Jira instance, where a cookie based session cannot be established and the .filter(session) method is not used in the subsequent tests.
E.g.
public void createSession() {
RestAssured.baseURI = "https://ronak-gavandi.atlassian.net";
authScheme.setUserName("gavandi.ronak@gmail.com");
authScheme.setPassword("Jo1VNLsBTQXedkqR5yk3825C"); // API token generated in Jira
RestAssured.authentication = authScheme;
}to (row, col) : (12, 4)
15:00:10.593 [main] INFO  oodaymy.VishayPage - Comments count found: 43
15:00:10.751 [main] INFO  resources.WriteExcel - Sheet name: REST Assured
15:00:10.751 [main] INFO  resources.WriteExcel - Current new row: 13
15:00:10.752 [main] INFO  resources.WriteExcel - Adding value 13to (row, col) : (13, 0)
15:00:10.752 [main] INFO  resources.WriteExcel - Adding value 8. Real world Example-Automating Jira API'sto (row, col) : (13, 1)
15:00:10.753 [main] INFO  resources.WriteExcel - Adding value 46. Integrating Query Params and Path Params in single test to restrict resultsto (row, col) : (13, 2)
15:00:10.754 [main] INFO  resources.WriteExcel - Adding value 5:30to (row, col) : (13, 3)
15:00:10.755 [main] INFO  resources.WriteExcel - Adding value *Information: Usage of both - pathParam and queryParam at the same time - here we are filtering out the comments fields (queryParam) from the entire list of fields for a particular defect id (pathParam).
E.g.
String response = given().log().all()
.pathParams("issueIdOrKey", "NEP-15")
.queryParam("fields", "comment")
.when().
get("/rest/api/3/issue/{issueIdOrKey}").
then().log().all()
.extract().response().asString();

JsonPath js = new JsonPath(response);
int commentsSize = (Integer) js.get("fields.comment.comments.size()");to (row, col) : (13, 4)
15:00:10.777 [main] INFO  oodaymy.VishayPage - Comments count found: 43
15:00:11.170 [main] INFO  resources.WriteExcel - Sheet name: REST Assured
15:00:11.170 [main] INFO  resources.WriteExcel - Current new row: 14
15:00:11.170 [main] INFO  resources.WriteExcel - Adding value 14to (row, col) : (14, 0)
15:00:11.171 [main] INFO  resources.WriteExcel - Adding value 8. Real world Example-Automating Jira API'sto (row, col) : (14, 1)
15:00:11.171 [main] INFO  resources.WriteExcel - Adding value 46. Integrating Query Params and Path Params in single test to restrict resultsto (row, col) : (14, 2)
15:00:11.171 [main] INFO  resources.WriteExcel - Adding value 1:17to (row, col) : (14, 3)
15:00:11.171 [main] INFO  resources.WriteExcel - Adding value *Information: GET request will not have header valueto (row, col) : (14, 4)
15:00:11.184 [main] INFO  oodaymy.VishayPage - Comments count found: 43
15:00:11.293 [main] INFO  resources.WriteExcel - Sheet name: REST Assured
15:00:11.293 [main] INFO  resources.WriteExcel - Current new row: 15
15:00:11.294 [main] INFO  resources.WriteExcel - Adding value 15to (row, col) : (15, 0)
15:00:11.294 [main] INFO  resources.WriteExcel - Adding value 8. Real world Example-Automating Jira API'sto (row, col) : (15, 1)
15:00:11.295 [main] INFO  resources.WriteExcel - Adding value 47. Parsing Complex Jira Json response to retrieve the added Comment with code logicto (row, col) : (15, 2)
15:00:11.296 [main] INFO  resources.WriteExcel - Adding value 3:42to (row, col) : (15, 3)
15:00:11.296 [main] INFO  resources.WriteExcel - Adding value *Information: Parsing Jira JSON response with comments array to validate a specific comment text -
E.g.
JsonPath js = new JsonPath(response);
int commentsSize = (Integer) js.get("fields.comment.comments.size()");

for (int i = 0; i < commentsSize; i++) {
String commentId = js.get("fields.comment.comments[" + i + "].id").toString();
if (commentId.equals("10003")) {
String actualComment = js.get("fields.comment.comments[" + i + "].body.content[0].content[0].text").toString();
Assert.assertEquals(actualComment, expectedComment);
break;
}
}to (row, col) : (15, 4)
15:00:11.306 [main] INFO  oodaymy.VishayPage - Comments count found: 43
15:00:11.423 [main] INFO  resources.WriteExcel - Sheet name: REST Assured
15:00:11.423 [main] INFO  resources.WriteExcel - Current new row: 16
15:00:11.423 [main] INFO  resources.WriteExcel - Adding value 16to (row, col) : (16, 0)
15:00:11.424 [main] INFO  resources.WriteExcel - Adding value 8. Real world Example-Automating Jira API'sto (row, col) : (16, 1)
15:00:11.424 [main] INFO  resources.WriteExcel - Adding value 48. Importance of Assertions and Https Validations on Rest API'sto (row, col) : (16, 2)
15:00:11.424 [main] INFO  resources.WriteExcel - Adding value 4:42to (row, col) : (16, 3)
15:00:11.424 [main] INFO  resources.WriteExcel - Adding value *Interview Questions: How will you bypass https validations in your request using REST Assured library?
Answer: By using the method - relaxedHTTPSValidations() after given() in the authentication request.to (row, col) : (16, 4)
